/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package org.ucieffe.kata.salestaxes;

import org.junit.jupiter.api.Test;
import org.ucieffe.kata.salestaxes.model.Basket;

import static org.hamcrest.MatcherAssert.assertThat;
import static org.hamcrest.core.Is.is;
import static org.ucieffe.kata.salestaxes.SemanticData.*;

public class BasketTest {

    @Test
    public void return_zero_when_no_item() {
        assertThat(price("0.00"), is(basketWith().produceReport().getTotal()));
    }

    @Test
    public void return_item_price_when_add_one_item_with_exemption() {
        Basket basket = basketWith(anExemptedItem("1.10"));

        assertThat(price("1.10"), is(basket.produceReport().getTotal()));
    }

    @Test
    public void return_item_price_when_add_one_item_with_tax() {
        Basket basket = basketWith(aTaxedItem("1.10"));

        assertThat(price("1.25"), is(basket.produceReport().getTotal()));
    }

    @Test
    public void return_item_price_when_add_one_imported_item() {
        Basket basket = basketWith(anImportedItem("1.10"));

        assertThat(price("1.20"), is(basket.produceReport().getTotal()));
    }

    @Test
    public void return_item_price_when_add_one_imported_and_taxed_item() {
        Basket basket = basketWith(anImportedAndTaxedItem("1.10"));

        assertThat(price("1.30"), is(basket.produceReport().getTotal()));
    }

    @Test
    public void return_sum_price_when_add_more_than_one_item_with_exemption() {
        Basket basketWithMultipleItems = basketWith(
                anExemptedItem("1.10"),
                anExemptedItem("2.20"),
                anExemptedItem("3.30")
        );
        assertThat(price("6.60"), is(basketWithMultipleItems.produceReport().getTotal()));
    }

}
